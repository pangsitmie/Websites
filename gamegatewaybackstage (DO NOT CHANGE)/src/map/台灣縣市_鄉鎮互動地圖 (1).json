{"ownername":"plotdb","key":2200,"name":"台灣縣市/鄉鎮互動地圖","owner":4,"theme":null,"parent":null,"description":"動畫式的台灣鄉鎮市區熱圖，透過點擊縣市再顯示鄉鎮細節地圖。資料以鄉鎮為主，但可選擇縣市資料計算的方式是透過鄉鎮加總或平均。亦可自由控制是否要顯示縣市區塊，","basetype":["9"],"visualencoding":["9"],"category":["4"],"tags":["taiwan","county","town","map","choropleth","heatmap"],"likes":8,"searchable":true,"dimlen":3,"createdtime":"2017-02-04T09:21:24.000Z","modifiedtime":"2017-02-07T20:21:06.000Z","doc":{"name":"document","size":1022,"type":"html","lines":25,"content":"<svg height=\"0\">\n  <defs>\n    <!-- patch id within code -->\n    <filter id=\"innerStroke\" x=\"0\" y=\"0\" width=\"1\" height=\"1\">\n      <feMorphology operator=\"erode\" in=\"SourceGraphic\" radius=\"3\" result=\"erode\"/>\n      <feColorMatrix type=\"matrix\" in=\"SourceGraphic\" result=\"color\"\n                     values=\"0 0 0 0 1  0 0 0 0 1  0 0 0 0 1  0 0 0 1 0\"/>\n      <feMerge>\n        <feMergeNode in=\"color\"/>\n        <feMergeNode in=\"erode\"/>\n      </feMerge>\n    </filter>\n    <!-- patch id within code -->\n    <filter id=\"shadow\" x=\"-0.5\" y=\"-0.5\" width=\"2\" height=\"2\">\n      <feGaussianBlur in=\"SourceAlpha\" result=\"blur\" stdDeviation=\"9.5\"/>\n      <feMorphology operator=\"dilate\" in=\"SourceGraphic\" radius=\"2\" result=\"dilate\"/>\n      <feColorMatrix type=\"matrix\" in=\"dilate\" result=\"color\" values=\"0.2 0 0 0 0   0 0.2 0 0 0   0 0 0.2 0 0    0 0 0 1 0\"/>\n      <feMerge>\n        <feMergeNode in=\"blur\"/>\n        <feMergeNode in=\"color\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n      </feMerge>\n    </filter>\n  </defs>\n</svg>"},"style":{"name":"stylesheet","size":102,"type":"css","lines":6,"content":"path, rect {\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n}\n.legend-group {\n  pointer-events: none;\n}"},"code":{"name":"code","size":15129,"type":"javascript","lines":372,"content":"{\n  sample: function() {\n    var list = taiwanmap.town.names;\n    return {\n      county: [{name: \"縣市\", data: list.map(function(d,i) { return d[0]; })}],\n      town:   [{name: \"鄉鎮\", data: list.map(function(d,i) { return d[1]; })}],\n      value:  [{name: \"數值\", data: list.map(function(d,i) {\n        return Math.round(Math.random() *100); })\n      }]\n    };\n  },\n  dimension: {\n    value: { type: [plotdb.Number], require: true, desc: \"該鄉鎮的數值\" },\n    county: { type: [plotdb.String], require: true, desc: \"縣市的名字，用來對應地圖區塊\" },\n    town: { type: [plotdb.String], require: true, desc: \"鄉鎮的名字，用來對應地圖區塊\" }\n  },\n  config: {\n    fontFamily: {},\n    background: {},\n    textFill: {},\n    fontSize: {},\n    margin: {},\n    colorEmpty: {},\n    palette: {},\n    stroke: {},\n    strokeWidth: {},\n    legendLabel: {},\n    legendShow: {},\n    popupShow: {},\n    aggregateMode: {\n      name: \"縣市數值\",\n      type: [plotdb.Choice([\"加總\",\"平均\"])],\n      default: \"平均\",\n      category: \"Value\"\n    },\n    showAll: {\n      name: \"顯示所有鄉鎮\",\n      type: [plotdb.Boolean],\n      default: true,\n      category: \"Global Settings\"\n    },\n    unit: {}\n  },\n  init: function() {\n    var that = this, i;\n    this.id = Math.random().toString(16).substring(2);\n    this.names = taiwanmap.town.names;\n    d3.select(this.root).select(\"defs filter#innerStroke\").attr({id: \"innerStroke-\" + this.id});\n    d3.select(this.root).select(\"defs filter#shadow\").attr({id: \"shadow-\" + this.id});\n    this.infoPanel = d3.select(this.root).append(\"div\").style({\n      position: \"absolute\",\n      bottom: \"10px\",\n      left: \"80px\",\n      \"min-width\": \"120px\",\n      display: \"inline-block\",\n      float: \"left\",\n      width: \"180px\",\n      padding: \"6px\",\n      \"border-radius\": \"5px\",\n      background: \"rgba(255,255,255,0.8)\",\n      \"text-align\": \"center\",\n      height: \"18px\",\n      \"line-height\": \"18px\",\n      opacity: 1,\n      \"pointer-event\": \"none\"\n    }).text(\"ⓘ 點擊縣市看鄉鎮\");\n    this.backBtn = d3.select(this.root).append(\"div\").style({\n      position: \"absolute\",\n      bottom: \"10px\",\n      left: \"20px\",\n      padding: \"6px\",\n      height: \"18px\",\n      \"border-radius\": \"5px\",\n      border: \"1px solid rgba(0,0,0,0.5)\",\n      cursor: \"pointer\",\n      background: \"rgba(255,255,255,0.8)\",\n      \"line-height\": \"18px\",\n      opacity: 0.2\n    }).text(\"縮小\").on(\"click\", function(d,i) {\n      that.lastActiveCounty = that.activeCounty;\n      that.activeCounty = null;\n      that.render();\n    });\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.bkrect = this.svg.append(\"rect\").on(\"click\", function(d,i) {\n      that.lastActiveCounty = that.activeCounty;\n      that.activeCounty = null;\n      that.render();\n    });\n    this.popup = plotd3.html.popup(this.root).on(\"mousemove\", function(d,i,popup) {\n      popup.select(\".title\").text(d.properties.C_Name + (d.properties.T_Name || \"\"));\n      popup.select(\".value\").text(\n        (d.properties.value == undefined ? \"無數值\"\n        :parseInt(d.properties.value*100)/100) + \" \" + (that.config.unit || \"\")\n      );\n      return true;\n    });\n    this.dataGroup = this.svg.append(\"g\").attr({class: \"data-group\"});\n    this.legendGroup = this.svg.append(\"g\").attr({class: \"legend-group\"});\n    this.counties = [];\n    this.features = {\n      town: topojson.feature(\n        taiwanmap.town.topojson, taiwanmap.town.topojson.objects.town\n      ).features,\n      county: topojson.feature(\n        taiwanmap.county.topojson, taiwanmap.county.topojson.objects.county\n      ).features\n    };\n    this.features.all = this.features.town.concat(this.features.county);\n    this.map = {town: {}, county: {}};\n    for(var i=0,c,t;i<this.features.town.length;i++) {\n      c = this.features.town[i].properties.C_Name;\n      t = this.features.town[i].properties.T_Name;\n      if(!this.map.town[c]) this.map.town[c] = {};\n      this.map.town[c][t] = this.features.town[i];\n    }\n    for(i=0,c;i<this.features.county.length;i++) {\n      c = this.features.county[i].properties.C_Name;\n      if(!this.map.county[c]) this.map.county[c] = {};\n      this.map.county[c] = this.features.county[i];\n    }\n  },\n  parse: function() {\n    var that = this;\n    if(!this.dimension.value.fields.length) this.data.map(function(d,i) { d.value = 0; });\n    var cvalue = {};\n    this.data.map(function(d,i) {\n      d.county = that.normalname(d.county.trim());\n      d.town = d.town.trim();\n      d.feature = that.map.town[d.county][d.town];\n      if(d.feature) d.feature.properties.value = d.value;\n      if(!cvalue[d.county]) cvalue[d.county] = {value: d.value, count: 1};\n      else {\n        cvalue[d.county].value += d.value;\n        cvalue[d.county].count += 1;\n      }\n    });\n    for(k in cvalue) {\n      if(this.config.aggregateMode == \"平均\") {\n        cvalue[k].value /= (cvalue[k].count || 1);\n      }\n      if(cvalue[k].value) that.map.county[k].properties.value = cvalue[k].value;\n    }\n    this.data = this.data.filter(function(d,i) { return d.feature});\n    this.valueRange = d3.extent(this.data.map(function(d,i) { return d.value; }));\n    if(this.valueRange[0] == this.valueRange[1]) this.valueRange[1]++;\n  },\n  normalname: function(it) {\n    if(!it) return it;\n    it = it.replace(\"台\",\"臺\");\n    if(it == \"臺北縣\") return \"新北市\";\n    if(it == \"臺中縣\") return \"臺中市\";\n    if(it == \"高雄縣\") return \"高雄市\";\n    if(it == \"臺南縣\") return \"臺南市\";\n    if(it == \"桃園縣\") return \"桃園市\";\n    return it;\n  },\n  bind: function() {\n    var that = this, sel,sel2;\n    sel = this.dataGroup.selectAll(\"g.towns\").data(taiwanmap.county.names);\n    sel.exit().remove();\n    sel = sel.enter().append(\"g\").attr({class: \"towns\"});\n    this.dataGroup.selectAll(\"g.towns\").each(function(d,i) {\n      var sel,node = d3.select(this);\n      sel = node.selectAll(\"path.data.geoblock.town\").data(that.features.town.filter(function(e,j) {\n        return e.properties.C_Name == d;\n      }));\n      sel.exit().remove();\n      sel.enter().append(\"path\").attr({class: \"geoblock\"});\n    });\n    sel = this.dataGroup.selectAll(\"path.data.geoblock.county\").data(this.features.county);\n    sel.exit().remove();\n    sel = sel.enter().append(\"path\").attr({class: \"geoblock\"});\n    sel = this.dataGroup.selectAll(\"path.geoblock\");\n    sel.attr({class: function(d,i) {\n      return \"data geoblock \" + (d.properties.T_Name ? \"town\" : \"county\");\n    }}).filter(function(d,i) { return d3.select(this).classed(\"county\"); }).on(\"click\", function(d,i) {\n      if(that.smallScreen) that.infoPanel.text(\"ⓘ 點擊鄉鎮看數值\");\n      else that.infoPanel.transition(\"fadeout\").duration(500).style({opacity: 0});\n      that.lastActiveCounty = that.activeCounty;\n      that.activeCounty = that.activeCounty == d ? null : d;\n      that.render();\n    });\n    sel = sel.filter(function(d,i) { return d3.select(this).classed(\"town\"); }).on(\"click\", function(d,i) {\n      that.infoPanel.text(d.properties.C_Name + d.properties.T_Name + \" : \" + d.properties.value + \" \" + (that.config.unit || \"\"));\n      that.lastActiveTown = that.activeTown;\n      that.activeTown = d3.select(this);\n      that.activeTown.style({ filter: \"url(#innerStroke-\" + that.id + \")\" });\n      if(that.lastActiveTown) that.lastActiveTown.style({filter: \"none\"});\n      /* click town to zoom out. disabled */\n      if(false) {\n        var ret = (that.config.showAll ? that.map.county[d.properties.C_Name]: null);\n        that.lastActiveCounty = that.activeCounty;\n        that.activeCounty = that.activeCounty == ret ? null : ret;\n        that.render();\n      }\n    });\n    if(!this.smallScreen && this.config.popupShow) this.popup.nodes(sel);\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height;\n    this.margin = Math.min(this.config.margin, width/4, height/4);\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    }).style({overflow: \"hidden\"});\n    this.smallScreen = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()));\n\n    this.popup.fontSize(this.config.fontSize);\n    this.cScale = plotdb.Palette.scale.auto(this.config.palette, this.dimension.value.fields);\n    this.legend = plotd3.rwd.legend()\n      .orient(\"right\")\n      .scale(this.cScale)\n      .label(this.config.legendLabel || \"\")\n      .fontSize(this.config.fontSize || 12);\n    this.legendGroup.call(this.legend);\n    this.legendSize = this.legend.offset();\n    this.projection = d3.geo.mercator()\n      .translate([width / 2, height / 2])\n      .scale(1)\n      .precision(.1);\n    this.path = d3.geo.path().projection(\n      function(coord) {\n        if(coord[1]>25.5) coord[1] = coord[1] - 1;\n        if(coord[0]<119) coord[0] = coord[0] + 1.5;\n        if(coord[0]>122.1) coord[0] = coord[0] - 1.2;\n        if(coord[0]>121.4 && coord[1]< 22.1) {\n          coord[0] -= 0.3;\n          coord[1] += 0.3;\n        }\n        return that.projection(coord);\n      }\n    );\n    var rateW = (that.width - this.margin * 2) * 16;\n    var rateH = (that.height - this.margin * 2) * 14;\n    this.rate = this.allRate = Math.min(rateW, rateH);\n    var center = this.center = [121,23.6];\n    this.projection.scale(this.rate).center(center);\n    bounds = this.path.bounds(this.features.county[0]);\n    this.posfix = [0,0];\n    this.projection.translate([width/2 + this.posfix[0], height/2 + this.posfix[1]]);\n    this.bkrect.attr({\n      x: 0, y: 0, width: this.width, height: this.height, fill: \"rgba(255,255,255,0.001)\"\n    });\n  },\n  render: function() {\n    var that = this;\n    var dx, dy, x, y, bounds, scale, translate;\n    d3.select(this.root).selectAll(\"div\").style({\n      \"font-size\": this.config.fontSize + \"px\",\n      \"font-family\": this.config.fontFamily\n    });\n    if(this.activeCounty && that.backBtn.style(\"opacity\")<1) {\n      that.backBtn.transition(\"opacity\").duration(500).style({opacity: 1});\n    } else if(!this.activeCounty && that.backBtn.style(\"opacity\")==1) {\n      that.backBtn.transition(\"opacity\").duration(500).style({opacity: 0.2});\n    }\n    this.dataGroup.selectAll(\"g.data-group > g.towns, g.data-group > path\").sort(function(a,b) {\n      if(that.activeCounty && that.activeCounty.properties.C_Name == a) return 1;\n      if(that.activeCounty && that.activeCounty.properties.C_Name == b) return -1;\n      if(a && a.properties && !a.properties.T_Name) return 1;\n      if(b && b.properties && !b.properties.T_Name) return -1;\n      return 0;\n    });\n    this.dataGroup.selectAll(\"path.data\").filter(function(d,i) {\n      return (\n        (that.activeCounty && that.activeCounty.properties.C_Name == d.properties.C_Name) ||\n        (that.lastActiveCounty && that.lastActiveCounty.C_Name == d.properties.C_Name) ||\n        (that.activeCounty == d) ||\n        (that.lastActiveCounty == d)\n      );\n    }).attr({d: that.path}).filter(function(d,i) {\n      return d3.select(this).classed(\"town\");\n    }).attr({opacity: 1});\n    if(this.activeCounty) {\n      bounds = that.path.bounds(this.activeCounty);\n      dx = bounds[1][0] - bounds[0][0],\n      dy = bounds[1][1] - bounds[0][1],\n      scale = 0.9 * this.rate / Math.max(\n        dx / (this.width - this.margin * 2),\n        dy / (this.height - this.margin * 2)\n      );\n      this.rate = scale;\n      this.projection.scale(scale).center(d3.geo.centroid(this.activeCounty)).translate([this.width/2, this.height/2]);\n      bounds = that.path.bounds(this.activeCounty);\n      var posfix = [\n        this.width/2 - (bounds[1][0] + bounds[0][0])/2,\n        this.height/2 - (bounds[1][1] + bounds[0][1])/2\n      ];\n      this.projection.translate([this.width/2 + posfix[0], this.height/2 + posfix[1]]);\n    } else {\n      if(this.rate != this.allRate) {\n        this.rate = this.allRate;\n        this.projection.scale(this.rate).center(this.center).translate([this.width/2, this.height/2]);\n      }\n    }\n    if(this.config.fontFamily) d3.select(this.root).style(\"font-family\", this.config.fontFamily);\n    d3.select(this.root).style(\"background-color\", this.config.background);\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize,\n      \"fill\": that.config.textFill\n    });\n    this.legendGroup.attr({\n      transform: [\"translate(\", this.width - this.legendSize[0] - 20, (this.height - this.legendSize[1])/2, \")\"].join(\" \"),\n      display: this.config.legendShow ? \"block\" : \"none\"\n    });\n    \n    this.svg.selectAll(\"g.towns\").attr({\n      filter: function(d,i) {\n        return that.activeCounty && that.activeCounty.properties.C_Name == d\n          ? \"url(#shadow-\" + that.id + \")\" : \"\";\n      }\n    });\n    this.svg.selectAll(\"path.data\").filter(function(d,i) {\n      return !d3.select(this).attr(\"fill\");\n    }).attr({ fill: this.config.colorEmpty });\n    var matcher = function(d,i) {\n      if(d3.select(this).classed(\"county\")) return !that.config.showAll;\n      if(\n        (that.activeCounty && that.activeCounty.properties.C_Name == d.properties.C_Name) ||\n        (that.lastActiveCounty && that.lastActiveCounty.properties.C_Name == d.properties.C_Name)\n      ) return true;\n      return that.config.showAll;\n    };\n    this.svg.selectAll(\"path.data\").filter(matcher).transition(\"morph\").duration(500).attr({\n      d: that.path,\n      opacity: function(d,i) {\n        if(that.activeCounty == d) return 0;\n        if(that.activeCounty && d3.select(this).classed(\"town\") && (\n           (that.activeCounty.properties.C_Name != d.properties.C_Name) &&\n           (that.lastActiveCounty && that.lastActiveCounty.properties.C_Name != d.properties.C_Name)\n        )) return that.config.showAll && d3.select(this).classed(\"town\") ? 1 : 0;\n        return 1;\n      },\n      \"pointer-events\": function(d,i) { return that.activeCounty == d ? \"none\" : \"initial\"; }\n    });\n    if(this.config.showAll) this.svg.selectAll(\"path.county\").transition(\"opacity\").duration(500).attr({\n      display: \"none\"\n    });\n\n    var nodes = this.svg.selectAll(\"path.data\").filter(function(d,i) { return !matcher.apply(this, [d,i]); });\n    nodes.attr({\n      \"pointer-events\": \"none\"//function(d,i) { return that.activeCounty == d ? \"none\" : \"initial\"; }\n    });\n    nodes.filter(function(d,i) { return d3.select(this).classed(\"county\"); }).transition(\"opacity\").duration(500).attr({\n      opacity: 0,\n    });\n    if(this.config.showAll) nodes = nodes.filter(function(d,i) { return false; });\n    nodes.filter(function(d,i) { return d3.select(this).classed(\"town\"); }).attr({opacity: 0});\n    this.dataGroup.selectAll(\"path.data\").transition(\"color\").duration(function(d,i) {\n      return d3.select(this).attr(\"fill\") ? 500 : 0;\n    }).attr({\n      fill: function(d,i) {\n        var v = d.properties.value;\n        if(!v) return that.config.colorEmpty;\n        return that.cScale(v);\n      },\n      stroke: function(d,i) {\n        var c = d3.hsl(that.config.stroke);\n        if(d3.select(this).classed(\"county\")) { c.l = (c.l + 1)/2; }\n        return c.toString();\n      },\n      \"stroke-width\": function(d,i) {\n        return that.config.strokeWidth * (d3.select(this).classed(\"county\") ? 1 : 0.5);\n      },\n    });\n  }\n}"},"assets":[],"dimension":{"value":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"該鄉鎮的數值","fields":[{"name":"數值","data":[17,41,100,9,77,58,53,62,36,62,16,20,84,23,1,80,95,46,32,85,81,65,80,36,100,91,99,52,67,19,40,89,47,92,55,87,96,17,49,91,69,68,5,9,40,39,56,28,90,77,16,6,10,93,27,49,63,11,28,81,27,97,51,68,30,28,30,55,22,8,48,37,5,31,40,77,54,7,54,30,42,30,52,6,37,57,47,77,4,32,41,54,7,74,60,39,86,43,41,89,53,77,44,50,36,57,75,96,51,93,10,81,87,39,46,23,3,64,29,34,45,96,29,5,100,41,83,49,5,34,84,12,56,30,28,79,62,62,56,15,66,4,57,25,5,50,65,94,54,46,5,43,16,30,34,6,4,38,13,92,60,5,20,50,46,66,14,91,98,30,25,64,23,99,21,35,30,81,36,87,88,56,21,78,88,8,76,26,30,58,54,30,47,64,60,0,85,2,41,72,63,72,64,73,25,75,15,86,38,37,60,67,31,48,70,72,98,31,42,9,91,20,26,22,97,54,99,12,12,83,69,65,99,73,48,78,14,67,57,98,83,21,98,59,42,15,55,89,13,13,69,79,98,85,17,11,3,45,17,93,42,9,10,41,70,82,78,86,72,36,98,19,30,67,84,5,27,78,28,70,8,97,23,81,47,15,23,8,90,26,97,55,84,74,34,79,33,42,38,79,74,34,96,31,94,47,25,48,56,79,4,71,90,76,74,4,81,74,29,2,48,79,65,28,85,13,66,61,59,3,56,49,28,41,83,95,48,5,56,2,21,75,78,88,67,81,21,18,80,54,41,40,98,93,98,55,33,92,16,29,18,84,25,74,12,70,63],"datatype":"Number","bind":"value"}],"fieldName":["數值"]},"county":{"type":[{"name":"String","default":"","level":2,"basetype":[]}],"require":true,"desc":"縣市的名字，用來對應地圖區塊","fields":[{"name":"縣市","data":["臺東縣","屏東縣","雲林縣","臺東縣","臺東縣","彰化縣","彰化縣","屏東縣","屏東縣","苗栗縣","新竹縣","苗栗縣","臺中市","臺中市","嘉義市","嘉義市","嘉義縣","嘉義縣","嘉義縣","嘉義縣","彰化縣","高雄市","高雄市","連江縣","連江縣","連江縣","連江縣","金門縣","金門縣","金門縣","金門縣","宜蘭縣","宜蘭縣","宜蘭縣","宜蘭縣","宜蘭縣","宜蘭縣","宜蘭縣","新竹縣","新竹縣","新竹縣","新竹縣","新竹縣","新竹縣","新竹縣","新竹縣","新竹縣","新竹縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","嘉義縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","彰化縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","南投縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","雲林縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","嘉義縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","臺東縣","臺東縣","臺東縣","臺東縣","臺東縣","花蓮縣","花蓮縣","花蓮縣","花蓮縣","花蓮縣","花蓮縣","花蓮縣","澎湖縣","澎湖縣","澎湖縣","澎湖縣","澎湖縣","澎湖縣","基隆市","基隆市","基隆市","基隆市","新竹市","臺北市","臺北市","臺北市","臺北市","臺北市","臺北市","臺北市","臺北市","臺北市","臺北市","臺北市","臺北市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","臺東縣","宜蘭縣","宜蘭縣","宜蘭縣","宜蘭縣","宜蘭縣","新竹縣","新竹縣","苗栗縣","苗栗縣","苗栗縣","苗栗縣","彰化縣","彰化縣","雲林縣","雲林縣","雲林縣","嘉義縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","屏東縣","臺東縣","臺東縣","臺東縣","臺東縣","臺東縣","臺東縣","臺東縣","花蓮縣","花蓮縣","花蓮縣","花蓮縣","花蓮縣","花蓮縣","基隆市","基隆市","基隆市","新竹市","新竹市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","高雄市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺中市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","高雄市","高雄市","高雄市","高雄市","高雄市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","新北市","臺中市","臺中市","臺中市","臺中市","臺南市","臺南市","臺南市","臺南市","臺南市","臺南市","臺中市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","桃園市","苗栗縣","金門縣"],"datatype":"String","bind":"county"}],"fieldName":["縣市"]},"town":{"type":[{"name":"String","default":"","level":2,"basetype":[]}],"require":true,"desc":"鄉鎮的名字，用來對應地圖區塊","fields":[{"name":"鄉鎮","data":["成功鎮","佳冬鄉","麥寮鄉","綠島鄉","蘭嶼鄉","田中鎮","社頭鄉","竹田鄉","萬丹鄉","三灣鄉","峨眉鄉","南庄鄉","南屯區","烏日區","西區","東區","太保市","中埔鄉","番路鄉","水上鄉","員林市","旗津區","小港區","南竿鄉","北竿鄉","莒光鄉","東引鄉","金城鎮","金沙鎮","金湖鎮","金寧鄉","宜蘭市","羅東鎮","礁溪鄉","員山鄉","冬山鄉","三星鄉","大同鄉","竹東鎮","新埔鎮","關西鎮","湖口鄉","芎林鄉","橫山鄉","北埔鄉","寶山鄉","尖石鄉","五峰鄉","苗栗市","卓蘭鎮","大湖鄉","公館鄉","銅鑼鄉","頭屋鄉","三義鄉","西湖鄉","造橋鄉","獅潭鄉","泰安鄉","彰化市","和美鎮","線西鄉","伸港鄉","秀水鄉","花壇鄉","芬園鄉","溪湖鎮","東石鄉","大村鄉","埔鹽鄉","埔心鄉","永靖鄉","二水鄉","北斗鎮","二林鎮","田尾鄉","埤頭鄉","芳苑鄉","大城鄉","竹塘鄉","溪州鄉","南投市","埔里鎮","草屯鎮","竹山鎮","集集鎮","名間鄉","鹿谷鄉","中寮鄉","魚池鄉","國姓鄉","水里鄉","信義鄉","仁愛鄉","斗六市","斗南鎮","虎尾鎮","西螺鎮","土庫鎮","北港鎮","古坑鄉","大埤鄉","莿桐鄉","林內鄉","二崙鄉","崙背鄉","東勢鄉","褒忠鄉","元長鄉","水林鄉","朴子市","大林鎮","民雄鄉","溪口鄉","新港鄉","六腳鄉","義竹鄉","鹿草鄉","竹崎鄉","梅山鄉","大埔鄉","阿里山鄉","屏東市","潮州鎮","長治鄉","麟洛鄉","九如鄉","里港鄉","鹽埔鄉","高樹鄉","萬巒鄉","內埔鄉","新埤鄉","崁頂鄉","南州鄉","琉球鄉","三地門鄉","霧臺鄉","瑪家鄉","泰武鄉","來義鄉","春日鄉","獅子鄉","關山鎮","鹿野鄉","池上鄉","海端鄉","延平鄉","鳳林鎮","玉里鎮","光復鄉","瑞穗鄉","富里鄉","萬榮鄉","卓溪鄉","馬公市","湖西鄉","白沙鄉","西嶼鄉","望安鄉","七美鄉","七堵區","暖暖區","仁愛區","信義區","東區","松山區","信義區","大安區","中山區","中正區","大同區","萬華區","文山區","南港區","內湖區","士林區","北投區","鹽埕區","三民區","新興區","前金區","苓雅區","前鎮區","金峰鄉","蘇澳鎮","頭城鎮","壯圍鄉","五結鄉","南澳鄉","竹北市","新豐鄉","苑裡鎮","通霄鎮","竹南鎮","後龍鎮","鹿港鎮","福興鄉","臺西鄉","四湖鄉","口湖鄉","布袋鎮","東港鎮","恆春鎮","枋寮鄉","新園鄉","林邊鄉","車城鄉","滿州鄉","枋山鄉","牡丹鄉","臺東市","卑南鄉","東河鄉","長濱鄉","太麻里鄉","大武鄉","達仁鄉","花蓮市","新城鄉","吉安鄉","壽豐鄉","豐濱鄉","秀林鄉","中正區","中山區","安樂區","北區","香山區","鼓山區","左營區","楠梓區","鳳山區","大寮區","大樹區","大社區","仁武區","鳥松區","岡山區","橋頭區","燕巢區","田寮區","阿蓮區","路竹區","湖內區","旗山區","美濃區","六龜區","甲仙區","杉林區","內門區","茂林區","桃源區","那瑪夏區","板橋區","三重區","中和區","永和區","新莊區","新店區","樹林區","鶯歌區","三峽區","汐止區","土城區","蘆洲區","五股區","泰山區","深坑區","石碇區","坪林區","平溪區","雙溪區","烏來區","中區","東區","南區","西區","北區","西屯區","北屯區","豐原區","東勢區","沙鹿區","后里區","神岡區","潭子區","大雅區","新社區","石岡區","外埔區","大肚區","霧峰區","太平區","大里區","和平區","新營區","鹽水區","白河區","柳營區","後壁區","東山區","麻豆區","下營區","六甲區","官田區","大內區","佳里區","學甲區","西港區","新化區","善化區","新市區","安定區","山上區","玉井區","楠西區","南化區","左鎮區","仁德區","歸仁區","關廟區","龍崎區","永康區","東區","北區","中西區","林園區","茄萣區","永安區","彌陀區","梓官區","淡水區","瑞芳區","林口區","三芝區","石門區","八里區","貢寮區","金山區","萬里區","大甲區","清水區","大安區","龍井區","七股區","將軍區","北門區","南區","安南區","安平區","梧棲區","桃園區","中壢區","大溪區","楊梅區","蘆竹區","龜山區","八德區","龍潭區","平鎮區","復興區","大園區","新屋區","觀音區","頭份市","烈嶼鄉"],"datatype":"String","bind":"town"}],"fieldName":["鄉鎮"]}},"config":{"unit":{"desc":"Unit of value","name":"Unit","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"%","default":"","category":"Value"},"margin":{"name":"Margin","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"0","default":10,"category":"Global Settings"},"stroke":{"desc":"Stroke Color","name":"Stroke","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#fcfcfc","default":"#999","category":"Global Settings"},"palette":{"name":"Palette","type":[{"re":{},"name":"Palette","level":30,"scale":{},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"subtype":{"binary":"binary","diverging":"diverging","sequential":"sequential","qualitative":"qualitative"},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]}}],"value":{"key":"S/P","name":"Sequential / Purple","_type":{"name":"palette","location":"sample"},"colors":[{"hex":"#ffe8e9","idx":0,"$$hashKey":"object:177"},{"hex":"#f0b3c1","idx":1,"$$hashKey":"object:178"},{"hex":"#d97fa7","idx":2,"$$hashKey":"object:179"},{"hex":"#b74c99","idx":3,"$$hashKey":"object:180"},{"hex":"#881793","idx":4,"$$hashKey":"object:181"}]},"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings"},"showAll":{"name":"顯示所有鄉鎮","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":false,"default":true,"category":"Global Settings"},"fontSize":{"name":"Font Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":13,"default":13,"category":"Global Settings"},"textFill":{"name":"Text Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000000","category":"Global Settings"},"popupShow":{"desc":"show Popup when user hovers over elements","name":"show Popup","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Popup","rebindOnChange":true},"background":{"name":"Background","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#ffffff","category":"Global Settings"},"colorEmpty":{"desc":"Color for 'no values'","name":"Empty","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#ffffff","category":"Global Settings"},"fontFamily":{"name":"Font","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Arial","default":"Arial","category":"Global Settings"},"legendShow":{"name":"Show Legend","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Legend"},"legendLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"百分比 (%)","category":"Legend"},"strokeWidth":{"desc":"Default Stroke width","name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"1","default":"2","category":"Global Settings"},"aggregateMode":{"name":"縣市數值","type":[{"name":"Choice","level":20,"values":["加總","平均"],"default":""}],"value":"平均","default":"平均","category":"Value"}},"library":["d3/3.5.12/min","plotd3/0.1.0","taiwanmap/0.0.2","topojson/1.6.24/min"],"local":null,"inherit":[],"metashow":null,"footer":null}